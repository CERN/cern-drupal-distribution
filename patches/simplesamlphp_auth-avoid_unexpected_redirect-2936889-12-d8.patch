diff --git a/simplesamlphp_auth.module b/simplesamlphp_auth.module
index 1f4783c..c8a605d 100644
--- a/simplesamlphp_auth.module
+++ b/simplesamlphp_auth.module
@@ -52,12 +52,27 @@ function simplesamlphp_auth_help($route_name) {
  */
 function simplesamlphp_auth_user_logout(AccountInterface $account) {
   $logout_url = \Drupal::config('simplesamlphp_auth.settings')->get('logout_goto_url');
+  $saml_session_expired = false;
+
+  $current_route = \Drupal::routeMatch()->getRouteName();
+  if ($current_route != 'user.logout') {
+    // If the logout route was not explicitly called by the user,
+    // we assume that logout was triggered by expiration of the SAML
+    // credential. In this case, rather than sending the user to the
+    // logout_goto_url specified in the module admin settings, we direct the
+    // user to the current request URI.
+    // Redirecting users whose SAML credentials have expired to the universal
+    // SSO logout results in confusion for those users.
+    $logout_url = \Drupal::request()->getUri();
+    $saml_session_expired = true;
+  }
+
   /** @var \Drupal\simplesamlphp_auth\Service\SimplesamlphpAuthManager $simplesaml */
   $simplesaml = \Drupal::service('simplesamlphp_auth.manager');
   $session = \Drupal::service('session_manager');

   // Only interfere if this user was logged in through simplesaml.
-  if ($simplesaml->isActivated() && $simplesaml->isAuthenticated()) {
+  if ($simplesaml->isActivated() && ($saml_session_expired || $simplesaml->isAuthenticated())) {
     // Have to destroy the session here as some configurations of
     // SimpleSAMLphp_auth can create infinite loops. By removing IdP auth before
     // Drupal auth, checks for local authentication will trigger before the
