<?php
/**
 * @file
 * Install, update and uninstall functions for the cern installation profile.
 */

/**
 * Implements hook_module_preinstall().
 *
 * We want to install cern_integration before updates.
 *
 */
//function cern_module_preinstall($module) {
//  module_set_weight('cern_integration', -5);
//}

/**
 * Implements hook_modules_installed().
 */
function cern_modules_installed() {
  /*
   * Set CERN-dependent matomo configuration.
   */
  \Drupal::configFactory()
    ->getEditable('matomo.settings')
    ->set("url_http", 'http://piwik.web.cern.ch/')
    ->save();
  \Drupal::configFactory()
    ->getEditable('matomo.settings')
    ->set("url_https", 'https://piwik.web.cern.ch/')
    ->save();

    /*Set OIDC vars*/
  $client_id= $form_state->getValue('clientID');
  $client_secret= $form_state->getValue('clientSecret');
  $issuer_url= $form_state->getValue('issuerURL');
  \Drupal::configFactory()
    ->getEditable("openid_connect.settings")
    ->set("client_ID", $client_id)
    ->save();

  \Drupal::configFactory()
    ->getEditable("openid_connect.settings")
    ->set("client_secret", $client_secret)
    ->save();

  \Drupal::configFactory()
    ->getEditable("openid_connect.settings")
    ->set("client_ID", $issuer_url)
    ->save();
}

/**
 * Implements hook_install_tasks().
 *
 * This is a hackish way to execute commands after the installation is fully completed. Here, for
 * incance, we can modify configuration defined in a config/install folder of a core module.
 */
function cern_install_tasks(&$install_state) {
   $tasks = [
     'cern_final_site_setup' => [],
   ];
   return $tasks;
}
function cern_final_site_setup() {
  /*
   * Overwrite update.settings configuration installed from
   * /core/modules/update/config/install/update.settings.yml.
   *
   * This cannot be defined in hook_modules_installed because it raises "PreExistingConfigException
   * with message 'Configuration objects (update.settings) provided by update already exist in
   * active configuration'".
   */
  \Drupal::configFactory()->getEditable('update.settings')->set('check.interval_days', 7)->save();
  \Drupal::configFactory()->getEditable('update.settings')->set('notification.threshold', "security")->save();
}
