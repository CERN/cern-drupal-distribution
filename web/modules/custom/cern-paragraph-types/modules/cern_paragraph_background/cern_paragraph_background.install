<?php

use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Installs field_p_background_video_url in cern_background paragraph type
 *
 * @return string the message to be returned
 * @throws EntityStorageException
 * @throws InvalidPluginDefinitionException
 * @throws PluginNotFoundException
 */
function cern_paragraph_background_update_8202(){

	try{
		$fieldName = 'field_p_background_video_url';
		$entityType = 'paragraph';
		$bundle = 'cern_background';
		$update_message = '';

		// field storage of new field creation
		if (empty(FieldStorageConfig::loadByName('paragraph', $fieldName))) {

			// creates the field storage
			$fieldStorage = FieldStorageConfig::create(array(
					'field_name'  => $fieldName,
					'langcode'  => 'en',
					'entity_type' => $entityType,
					'type' => 'link',
					'settings' => [],
					'module' => 'link',
					'locked' => false,
					'cardinality' => 1,
					'translatable' => true,
					'indexes' => [],
					'persist_with_no_fields' => false,
					'custom_storage' => false,
			));
			$fieldStorage->save();
		}

		// append VidURL to field settings of field_p_background_type
		$background_type_storage = Drupal::entityTypeManager()->getStorage('field_storage_config')->load('paragraph.field_p_background_type');
		$allowed_values = $background_type_storage->getSetting('allowed_values');
		$allowed_values['VidURL'] = 'Video from URL';
		$background_type_storage->setSetting('allowed_values',$allowed_values);
		$background_type_storage->save();

		//field creation
		if (empty(FieldConfig::loadByName('paragraph','cern_section', $fieldName))) {
			// creates the field in cern_section
			$field = FieldConfig::create(array(
					'field_name' => $fieldName,
					'entity_type' => $entityType,
					'bundle' => $bundle,
					'label' => 'Video URL',
					'description' => 'A link which references an embedded video. For features such as autoplay or hidden 
															controls, please see the options of your chosen video stream service (e.g. YouTube).',
					'required' => false,
					'translatable' => false,
					'default_value' => [],
					'default_value_callback' => '',
					'settings' => ['link_type' => 16,
							'title' => 0],
					'field_type' => 'link'
			));
			$fieldSaved = $field->save();
		}

		// manage form display changing
		$manageFormDisplay = Drupal::entityTypeManager()
				->getStorage('entity_form_display')
				->load('paragraph.' . $bundle . '.default');

		$manageFormDisplay->setComponent($fieldName, array(
						'weight' => 5,
						'type' => 'link_default',
						'region' => 'content',
						'settings' => ['placeholder_url' => '',
								'placeholder_title' => ''],
						'third_party_settings' => [],
				)
		)->save();

		//manage view display changing
		$manageViewDisplay = \Drupal::entityTypeManager()
				->getStorage('entity_view_display')
				->load('paragraph.' . $bundle . '.default');
		$manageViewDisplay->setComponent($fieldName, array('weight' => 4,
						'label' => 'above',
						'type' => 'link',
						'region' => 'video_url',
						'settings' => ['trim_length' => 'null',
								'url_only' => true,
								'url_plain' => true,
								'rel' => 0,
								'target' => 0
						],
						'third_party_settings' => [
								'field_formatter_class' => [
										'class' => ''
								]
						],
				)
		)->save();
		//set manage field under video_url field
		$thirdPartySettings = $manageViewDisplay->getThirdPartySettings('ds')['regions'];
		$thirdPartySettings['video_url'] = array($fieldName);
		$manageViewDisplay->setThirdPartySetting('ds', 'regions', $thirdPartySettings);
		$manageViewDisplay->save();

	} catch (EntityStorageException $e) {
		throw $e;
	}  catch (PluginNotFoundException $e) {
		throw $e;
	} catch (InvalidPluginDefinitionException $e) {
		throw $e;
	}

}
