<?php

/**
 * @file
 * Contains hooks implementations and helper functions for cern_indico_feeds.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\feeds\Entity\Feed;
use Drupal\views\DisplayPluginCollection;
use Drupal\views\Views;

define('INDICO_URL', 'https://indico.cern.ch');

/**
 * Implements hook_help().
 */
function cern_indico_feeds_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the cern_indico_feeds module.
    case 'help.page.cern_indico_feeds':
      $output = '';
      $output .= '<h3>' . t('Indico Feeds') . '</h3>';
      $output .= '<p>' . t('This module allows you to import events from Indico. To use it, create a key pair in Indico via <em>My Profile / HTTP API</em>. Then go to the <a href="@fetcher">Indico Fetcher settings</a> and enter your key pair.', array('@fetcher' => url('admin/structure/feeds/edit/indico/settings/IndicoFetcher'))) . '</p>';
      $output .= '<p>' . t('To actually import data from indico, <a href="@feed">create a new <em>Indico Feed</em> content node</a> and enter the requested infomation. To find out the ID of a category, open it in Indico and copy the numeric value next to <em>/category/</em> from the URL.', array('@feed' => url('node/add/indico-feed'))) . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_local_tasks_alter().
 */
function cern_indico_feeds_local_tasks_alter(&$local_tasks) {
  unset($local_tasks['feeds.item_list']);
}

/**
 * Helper function to create the views blocks for feeds.
 */
function _cern_indico_feeds_create_blocks (Drupal\feeds\Entity\Feed $feed) {
  if ($feed->getType()->id() == 'indico') {
    $views_ids = ['indico_events_block', 'indico_events_block_with_details'];
    foreach ($views_ids as $views_id) {
      $view = Views::getView($views_id);
      $display_id = 'block_feed_'.$feed->id();
      $displays  = new DisplayPluginCollection($view, Views::pluginManager('display'));
      if(!$displays->has($display_id)) {
        $display = $view->newDisplay('block', 'Feed Block: '.$feed->title->value, $display_id);
        $filters = $display->getOption('filters');
        $filters['feeds_item_target_id']['value']['value'] = $feed->id();
        $display->overrideOption('filters', $filters);
        $display->overrideOption('title', $feed->title->value);
        $display->overrideOption('block_category', 'Indico Events');
        $view->save();
        drupal_set_message(t('Blocks displaying events from your feed have been automatically created. You may enable them on the <em>Structure &raquo; Block Layout</em> page.'));
      }
    }
  }
}


/**
 * Helper function to delete the views blocks created for feeds.
 */
function _cern_indico_feeds_delete_blocks (Feed $feed) {
  if ($feed->getType()->id() == 'indico') {
    $views_ids = ['indico_events_block', 'indico_events_block_with_details'];
    foreach ($views_ids as $views_id) {
      $view = Views::getView($views_id);
      $display_id = 'block_feed_' . $feed->id();
      $displays = new DisplayPluginCollection($view, Views::pluginManager('display'));
      if ($displays->has($display_id)) {
        $displays->remove($display_id);
        $view->save();
        $storage = $view->storage;
        $storage_displays = $storage->get('display');
        unset($storage_displays[$display_id]);
        $storage->set('display', $storage_displays);
        $storage->save();
        drupal_set_message(t('Blocks related to this feed has been removed.'));
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_update();
 */
function cern_indico_feeds_feeds_feed_update(Feed $feed) {
  _cern_indico_feeds_create_blocks($feed);
}


/**
 * Implements hook_ENTITY_TYPE_insert();
 */
function cern_indico_feeds_feeds_feed_insert(Feed $feed) {
  _cern_indico_feeds_create_blocks($feed);
}


/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function cern_indico_feeds_feeds_feed_delete(Feed $feed) {
  _cern_indico_feeds_delete_blocks($feed);
}


/**
 * Implements hook_preprocess_hook().
 */
function cern_indico_feeds_preprocess_feeds_feed(&$variables) {
  $feed_type = $variables['feed']->getType()->get('fetcher');
  if ($feed_type == 'indico') {
    $view = views_embed_view('indico_events_page', 'block_1');
    $view['#weight'] = 10;
    $variables['content']['feeds_content'] = $view;
  }
}
