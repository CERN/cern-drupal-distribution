# Default Nginx server configuration.
# This can be overwritten for specific sites that need special rules
# with a configmap.

upstream php {
    server unix:/var/run/drupal.sock;
}
upstream webdav {
    server unix:/var/run/webdav.sock;
}

#proxy_cache_path /var/cache/nginx keys_zone=one:10m max_size=200m;

server {
    #listen 8080 ssl;
    listen 8080;

    #ssl_certificate        /etc/ssl/certs/ca-certificates.crt;
    #ssl_certificate_key    /etc/ssl/certs/ca-cert-COMODO_Certification_Authority.pem;
    #ssl_session_cache     shared:SSL:20m;
    #ssl_session_timeout   4h;

    root /app/web;

    # Add gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 5;
    gzip_types application/json text/css text/javascript application/x-javascript application/javascript image/svg+xml;
    gzip_proxied any;

    sendfile on;
    keepalive_timeout 25;

    etag off;

    # Disables specifying the port in absolute redirects
    port_in_redirect off;

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        log_not_found off;
        access_log off;
        allow all;
        # Hide version headers
        server_tokens off;
    }

    location / {
        # try_files $uri @rewrite; # For Drupal <= 6
        try_files $uri /index.php?$query_string; # For Drupal >= 7
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Status page of PHP. Commenting to avoid access from outside the cluster
    location = /_site/_php-fpm-status {
        deny all;
        #include fastcgi_params;
        #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_pass php;
        #allow all;
    }
    # Disable /_site, which doesn't give any functionality now
    location ^~ /_site {
        deny all;
    }
    # WebDAV Page
    location ^~ /_webdav {
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922    for details.
        include fastcgi_params;

        # CGI_PARAM list: https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/.
        # Mitigate https://httpoxy.org/ vulnerabilities
        fastcgi_param HTTP_PROXY "";
        #  this is the script name as it is seen from the HTTP side.
        fastcgi_param SCRIPT_NAME /_webdav;
        # this is the local path to the script
        fastcgi_param SCRIPT_FILENAME /webdav/server.php;
        fastcgi_param QUERY_STRING $query_string;
        # Set client_max_body_size. This is need to upload large field through sabredav else webdav throws "413 Request Entity Too Large"
        # Currently we set max upload size on 100M, values above should use `oc` client? TBD
        client_max_body_size 100M;
        fastcgi_read_timeout 60;

        fastcgi_pass webdav;
    }


    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        allow 192.168.0.0/16;
        deny all;
    }

    # !!! NOTE
    # Order is important in nginx rules. If the following `location` are rearranged, things will BREAK.

    # We want to make the redirection https://sitename.web.cern.ch/sitename/sites/something to https://sitename.web.cern.ch/sites/default/.
    # This location matches any url containing /sites/sitename/.../file and redirects to /sites/default/.../file.
    # It omits redirection for urls containing /sites/default.
    # To develop this section the following links were used:
    # - http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite
    # - https://www.nginx.com/blog/creating-nginx-rewrite-rules/
    # Ref: https://gitlab.cern.ch/webservices/webframeworks-planning/-/issues/390
    location ~ "^/sites/((?!default)).*$" {
        rewrite ^(/sites)/[^\/]+/(.*)$ $1/default/$2 permanent;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to scripts in site files directory
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    # In Drupal 8, we must also match new paths where the '.php' appears in
    # the middle, such as update.php/selection. The rule we use is strict,
    # and only allows this pattern with the update.php front controller.
    # This allows legacy path aliases in the form of
    # blog/index.php/legacy-path to continue to route to Drupal nodes. If
    # you do not have any paths like that, then you might prefer to use a
    # laxer rule, such as:
    #   location ~ \.php(/|$) {
    # The laxer rule will continue to work if Drupal uses this new URL
    # pattern with front controllers other than update.php in a future
    # release.
    location ~ '\.php$|^/update.php' {
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922    for details.
        include fastcgi_params;
        # Block httpoxy attacks. See https://httpoxy.org/   .
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_intercept_errors on;
        fastcgi_read_timeout 60;
        # PHP 5 socket location.
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
        # PHP 7 socket location.
        fastcgi_pass php;
    }

    # Fighting with Styles? This little gem is amazing.
    # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
    location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
        try_files $uri @rewrite;
    }

    # Handle private files through Drupal. Private file's path can come
    # with a language prefix.
    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri @rewrite;
        expires max;
        access_log off;
        log_not_found off;
    }
}
